name: Pull Request
on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main
    paths:
      - "source/**"
      - "tests/**"

jobs:
  Build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - name: Calculate ModuleVersion (GitVersion)
        run: |
          dotnet tool install --global GitVersion.Tool
          dotnet-gitversion
          $gitVersionObject = dotnet-gitversion | ConvertFrom-Json
          $gitVersionObject.PSObject.Properties.ForEach{
              Write-Host -Object "Setting Task Variable '$($_.Name)' with value '$($_.Value)'."
              Write-Output "$($_.Name)=$($_.Value)" >> $env:GITHUB_ENV
          }
          Write-Output "updatebuildnumber=$($gitVersionObject.FullSemVer)" >> $env:GITHUB_ENV
        shell: pwsh
      - name: Build & Package Module
        run: |
          ./build.ps1 -ResolveDependency -tasks pack
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: output
          path: output
  Test_Linux_Core:
    name: Test Linux Core
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v4
        with:
          name: output
          path: "output"
      - name: Linux_Core
        run: |
          ./build.ps1 -ResolveDependency -tasks test
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: CodeCoverage_Linux_Core
          path: output/testResults/
  Test_Windows_Core:
    name: Test Windows Core
    runs-on: windows-2022
    needs: Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v4
        with:
          name: output
          path: "output"
      - name: Windows_Core
        run: |
          ./build.ps1 -ResolveDependency -tasks test
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: CodeCoverage_Windows_Core
          path: output/testResults/
  Test_Windows_Desktop:
    name: Test Windows Desktop
    runs-on: windows-2022
    needs: Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v4
        with:
          name: output
          path: "output"
      - name: Windows_Desktop
        run: |
          ./build.ps1 -ResolveDependency -tasks test
        shell: powershell
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: CodeCoverage_Windows_Desktop
          path: output/testResults/
  Test_MacOS_Core:
    name: Test MacOS Core
    runs-on: macos-latest
    needs: Build
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: "0"
      - uses: actions/download-artifact@v4
        with:
          name: output
          path: "output"
      - name: MacOS_Core
        run: |
          ./build.ps1 -ResolveDependency -tasks test
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          retention-days: 1
          name: CodeCoverage_MacOS_Core
          path: output/testResults/
  Cleanup:
    name: Cleanup
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs:
      - Test_Linux_Core
      - Test_Windows_Core
      - Test_Windows_Desktop
      - Test_MacOS_Core
    steps:
      - uses: geekyeggo/delete-artifact@v2
        with:
          name: |
            CodeCov*
            output
          failOnError: false
